HYDROLAND:
  1:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "2t"
      grid: "%HYDROLAND.GRID%"
      method: "%HYDROLAND.METHOD%"
      area: "%HYDROLAND.AREA%"
    OPAREQUEST:
      # Hardcoded parameters:
      variable: "2t"
      # raw for hourly | mean for daily
      stat: "mean"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_HYDROLAND%"
      save_filepath: "%OUT_HYDROLAND%"
      bias_adjust: "%BIAS_ADJUSTMENT.BIAS_ADJUST%"
      ba_reference_dir: "%BIAS_ADJUSTMENT.REFERENCE_DIR%/cdfs_t2m/"
      ba_future_start_date: "%BIAS_ADJUSTMENT.FUTURE_START_DATE%"
      ba_agg_method: "mean"
  2:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "avg_tprate"
      grid: "%HYDROLAND.GRID%"
      method: "%HYDROLAND.METHOD%"
      area: "%HYDROLAND.AREA%"
    OPAREQUEST:
      # Hardcoded parameters:
      variable: "avg_tprate"
      # raw for hourly | mean for daily
      stat: "mean"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_HYDROLAND%"
      save_filepath: "%OUT_HYDROLAND%"
      bias_adjust: "%BIAS_ADJUSTMENT.BIAS_ADJUST%"
      ba_reference_dir: "%BIAS_ADJUSTMENT.REFERENCE_DIR%/cdfs_precip"
      ba_future_start_date: "%BIAS_ADJUSTMENT.FUTURE_START_DATE%"
      ba_agg_method: "mean"
      ba_non_negative: True
      ba_lower_threshold: 0.001
WILDFIRES_FWI:
  1:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "1200"
      param: "10u"
      grid: "%WILDFIRES_FWI.GRID%"
      method: "%WILDFIRES_FWI.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters:
      variable: "10u"
      stat: "raw"
      stat_freq: "daily_noon"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_FWI%"
      save_filepath: "%OUT_WILDFIRES_FWI%"
  2:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "1200"
      param: "10v"
      grid: "%WILDFIRES_FWI.GRID%"
      method: "%WILDFIRES_FWI.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters:
      variable: "10v"
      stat: "raw"
      stat_freq: "daily_noon"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_FWI%"
      save_filepath: "%OUT_WILDFIRES_FWI%"
  3:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "1200"
      param: "2d"
      grid: "%WILDFIRES_FWI.GRID%"
      method: "%WILDFIRES_FWI.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters:
      variable: "2d"
      stat: "raw"
      stat_freq: "daily_noon"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_FWI%"
      save_filepath: "%OUT_WILDFIRES_FWI%"
  4:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "avg_tprate"
      grid: "%WILDFIRES_FWI.GRID%"
      method: "%WILDFIRES_FWI.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters:
      variable: "avg_tprate"
      stat: "mean"
      stat_freq: "daily_noon"
      output_freq: "daily_noon"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_FWI%"
      save_filepath: "%OUT_WILDFIRES_FWI%"
  5:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "1200"
      param: "2t"
      grid: "%WILDFIRES_FWI.GRID%"
      method: "%WILDFIRES_FWI.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters:
      variable: "2t"
      stat: "raw"
      stat_freq: "daily_noon"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_FWI%"
      save_filepath: "%OUT_WILDFIRES_FWI%"
ENERGY_ONSHORE:
  1:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "hl"
      levelist: 100
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "v"
      grid: "%ENERGY_ONSHORE.GRID%"
      method: "%ENERGY_ONSHORE.METHOD%"
      area: "%ENERGY_ONSHORE.AREA%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "v"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_ONSHORE%"
      save_filepath: "%OUT_ENERGY_ONSHORE%"
  2:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "hl"
      levelist: 100
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "u"
      grid: "%ENERGY_ONSHORE.GRID%"
      area: "%ENERGY_ONSHORE.AREA%"
      method: "%ENERGY_ONSHORE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "u"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_ONSHORE%"
      save_filepath: "%OUT_ENERGY_ONSHORE%"
  3:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "hl"
      levelist: 100
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "v"
      grid: "%ENERGY_ONSHORE.GRID%"
      method: "%ENERGY_ONSHORE.METHOD%"
      area: "%ENERGY_ONSHORE.AREA%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "v"
      stat: "mean"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_ONSHORE%"
      save_filepath: "%OUT_ENERGY_ONSHORE%"
  4:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "hl"
      levelist: 100
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "u"
      grid: "%ENERGY_ONSHORE.GRID%"
      area: "%ENERGY_ONSHORE.AREA%"
      method: "%ENERGY_ONSHORE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "u"
      stat: "mean"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_ONSHORE%"
      save_filepath: "%OUT_ENERGY_ONSHORE%"
  5:
    GSVREQUEST: #raw data
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "2t"
      grid: "%ENERGY_ONSHORE.GRID%"
      area: "%ENERGY_ONSHORE.AREA%"
      method: "%ENERGY_ONSHORE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "2t"
      stat: "min"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_ONSHORE%"
      save_filepath: "%OUT_ENERGY_ONSHORE%"
  6:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "2t"
      grid: "%ENERGY_ONSHORE.GRID%"
      area: "%ENERGY_ONSHORE.AREA%"
      method: "%ENERGY_ONSHORE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "2t"
      stat: "max"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_ONSHORE%"
      save_filepath: "%OUT_ENERGY_ONSHORE%"
  7:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "2t"
      grid: "%ENERGY_ONSHORE.GRID%"
      area: "%ENERGY_ONSHORE.AREA%"
      method: "%ENERGY_ONSHORE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "2t"
      stat: "mean"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_ONSHORE%"
      save_filepath: "%OUT_ENERGY_ONSHORE%"
  8:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "hl"
      levelist: 100
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "ws"
      grid: "%ENERGY_ONSHORE.GRID%"
      area: "%ENERGY_ONSHORE.AREA%"
      method: "%ENERGY_ONSHORE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "ws"
      stat: "histogram"
      stat_freq: "weekly"
      output_freq: "weekly"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_ONSHORE%"
      save_filepath: "%OUT_ENERGY_ONSHORE%"

ENERGY_OFFSHORE:
  1:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "10u"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "10u"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
  2:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "10v"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "10v"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
  3:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "hl"
      levelist: "100"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "u"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "u"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
  4:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "hl"
      levelist: "100"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "v"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "v"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
  5:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "o2d"
      date: "%SPLIT_START_DATE%"
      time: "0000"
      param: "avg_sithick"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "avg_sithick"
      stat: "raw"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
  6:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "o2d"
      date: "%SPLIT_START_DATE%"
      time: "0000"
      param: "avg_siconc"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "avg_siconc"
      stat: "raw"
      stat_freq: "daily"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
  7:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "pl"
      levelist: "1000"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "t"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "t"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
  8:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "pl"
      levelist: "1000"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "q"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "q"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
  9:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "pl"
      levelist: "1000"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "clwc"
      grid: "%ENERGY_OFFSHORE.GRID%"
      area: "%ENERGY_OFFSHORE.AREA%"
      method: "%ENERGY_OFFSHORE.METHOD%"
    OPAREQUEST:
      variable: "clwc"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_ENERGY_OFFSHORE%"
      save_filepath: "%OUT_ENERGY_OFFSHORE%"
HYDROMET:
  1:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "avg_tprate"
      grid: "%HYDROMET.GRID%"
      area: "%HYDROMET.AREA%"
      method: "%HYDROMET.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "avg_tprate"
      stat: "iams"
      stat_freq: "yearly"
      output_freq: "yearly"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_HYDROMET%"
      save_filepath: "%OUT_HYDROMET%"
  2:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "avg_tprate"
      grid: "%HYDROMET.GRID%"
      area: "%HYDROMET.AREA%"
      method: "%HYDROMET.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "avg_tprate"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "monthly" # Achtung this does not apply for "raw" stat
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_HYDROMET%"
      save_filepath: "%OUT_HYDROMET%"
WILDFIRES_WISE:
  1:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "2t"
      grid: "%WILDFIRES_WISE.GRID%"
      area: "%WILDFIRES_WISE.AREA%"
      method: "%WILDFIRES_WISE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "2t"
      stat: "mean"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_WISE%"
      save_filepath: "%OUT_WILDFIRES_WISE%"
  2:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "2d"
      grid: "%WILDFIRES_WISE.GRID%"
      area: "%WILDFIRES_WISE.AREA%"
      method: "%WILDFIRES_WISE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "2d"
      stat: "mean"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_WISE%"
      save_filepath: "%OUT_WILDFIRES_WISE%"
  3:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "10v"
      grid: "%WILDFIRES_WISE.GRID%"
      area: "%WILDFIRES_WISE.AREA%"
      method: "%WILDFIRES_WISE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "10v"
      stat: "mean"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_WISE%"
      save_filepath: "%OUT_WILDFIRES_WISE%"
  4:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "10u"
      grid: "%WILDFIRES_WISE.GRID%"
      area: "%WILDFIRES_WISE.AREA%"
      method: "%WILDFIRES_WISE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "10u"
      stat: "mean"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_WISE%"
      save_filepath: "%OUT_WILDFIRES_WISE%"
  5:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc"
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "avg_tprate"
      grid: "%WILDFIRES_WISE.GRID%"
      area: "%WILDFIRES_WISE.AREA%"
      method: "%WILDFIRES_WISE.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "avg_tprate"
      stat: "raw"
      stat_freq: "hourly"
      output_freq: "daily"
      time_step: 60 # in minutes
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_WILDFIRES_WISE%"
      save_filepath: "%OUT_WILDFIRES_WISE%"
OBSALL:
  1:
    GSVREQUEST: #raw data (2t at sfc-level  from IFS model) for SYNOP Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "2t" # 2t - air temperature at 2 m (167)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "2t" # 2t - air temperature at 2 m (167)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  2:
    GSVREQUEST: #raw data (t at 850 hPa from IFS model) for RADSOUND Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "pl" # please fill this
      levelist: [850]
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/1200"
      param: "t" #  t - air temperature (130) at 850 hPa
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "t" # t - air temperature (130) at 850 hPa
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 720 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  3:
    GSVREQUEST: #raw data (2t at sfc-level from IFS model) for RADSOUND Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/1200"
      param: "2t" # 2t - air temperature at 2 m (167)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "2t" # 2t - air temperature at 2 m (167)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 720 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  4:
    GSVREQUEST: #raw data (2d at sfc-level from IFS model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "2d" # 2d - dewpoint temperature at 2 m (168)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "2d" # 2d - dewpoint temperature at 2 m (168)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  5:
    GSVREQUEST: #raw data (10u at sfc-level from IFS model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "10u" # 10u - U component of wind speed at 10 m (165)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "10u" # 10u - U component of wind speed at 10 m (165)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  6:
    GSVREQUEST: #raw data (10v at sfc-level from IFS model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "10v" # 10v - V component of wind speed at 10 m (166)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "10v" # 10v - V component of wind speed at 10 m (166)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  7:
    GSVREQUEST: #raw data (sp at sfc-level from IFS model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "sp" # sp - surface pressure (134)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "sp" # sp - surface pressure (134)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  8:
    GSVREQUEST: #raw data (skt at sfc-level from IFS model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "sfc" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "skt" # skt - skin temperature (235)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "skt" # skt - skin temperature (235)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  9:
    GSVREQUEST: #raw data (t at pl-levels from IFS model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "pl" # please fill this
      levelist: [1000, 925, 850, 700, 600, 500, 400, 300, 250, 200, 150, 100, 70, 50, 30, 20, 10, 5, 1]
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "t" #  t - air temperature (130) at multiple hPa pressure levels (see levelist)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "t" # t - air temperature (130) at multiple hPa pressure levels (see levelist)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  10:
    GSVREQUEST: #raw data (q at pl-levels from IFS model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "pl" # please fill this
      levelist: [1000, 925, 850, 700, 600, 500, 400, 300, 250, 200, 150, 100, 70, 50, 30, 20, 10, 5, 1]
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "q" #  q - specific humidity (133) at multiple hPa pressure levels (see levelist)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "q" #  q - specific humidity (133) at multiple hPa pressure levels (see levelist)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  11:
    GSVREQUEST: #raw data (clwc at pl-levels from IFS model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "pl" # please fill this
      levelist: [1000, 925, 850, 700, 600, 500, 400, 300, 250, 200, 150, 100, 70, 50, 30, 20, 10, 5, 1]
      date: "%SPLIT_START_DATE%"
      time: "0000/to/2300/by/0100"
      param: "clwc" #  clwc - specific liquid water content (246) at multiple hPa pressure levels (see levelist)
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "clwc" #  clwc - specific liquid water content (246) at multiple hPa pressure levels (see levelist)
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 60 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
  12:
    GSVREQUEST: #raw data (avg_siconc at o2d-level from NEMO model) for SATELLITE Part of OBSALL Apps
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "o2d" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "0000" # note, outputting ocean variables as daily averages, from NEMO model
      param: "avg_siconc" # avg_siconc - sea ice fraction, param: [263001]
      grid: "%OBSALL.GRID%" #fill this if needed. 0.05 is 5km
      method: "%OBSALL.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "avg_siconc" # avg_siconc - sea ice fraction, param: [263001]
      stat: "raw" # please fill this
      stat_freq: "hourly" # please fill this
      output_freq: "daily" # please fill this
      time_step: 0 # in minutes, 60*timestep length in hours TODO: do that automatically
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_OBSALL%"
      save_filepath: "%OUT_OBSALL%"
DATA:
  1:
    GSVREQUEST:
      # From <expid>/conf/main.yml:
      expver: "%REQUEST.EXPVER%"
      # From user input <expid>/conf/request.yml:
      activity: "%REQUEST.ACTIVITY%"
      resolution: "%REQUEST.RESOLUTION%"
      generation: "%REQUEST.GENERATION%"
      realization: "%REQUEST.REALIZATION%"
      experiment: "%REQUEST.EXPERIMENT%"
      model: "%REQUEST.MODEL%"
      # Hardcoded parameters:
      dataset: climate-dt
      class: d1
      type: fc
      stream: clte
      levtype: "%DATA_1.GSVREQUEST.LEVTYPE%" # please fill this
      date: "%SPLIT_START_DATE%"
      time: "%DATA_1.GSVREQUEST.TIME%" # please fill this
      param: "%DATA_1.GSVREQUEST.PARAM%" # please fill this
      grid: "%DATA.GRID%" #fill this if needed. 0.05 is 5km
      method: "%DATA.METHOD%"
    OPAREQUEST:
      # Hardcoded parameters
      variable: "%DATA_1.GSVREQUEST.PARAM%" # please fill this
      stat: "%DATA_1.OPAREQUEST.STAT%" # please fill this
      stat_freq: "%DATA_1.OPAREQUEST.STAT_FREQ%" # please fill this
      output_freq: "%DATA_1.OPAREQUEST.OUTPUT_FREQ%" # please fill this
      time_step: "%DATA_1.OPAREQUEST.TIME_STEP%" # please fill this
      save: True
      checkpoint: True
      # From <expid>/conf/main.yml:
      checkpoint_filepath: "%OUT_DATA%"
      save_filepath: "%OUT_DATA%"
