
FAQ
===

Where are my logs? And my scripts?
----------------------------------

Your experiment in the Virtual Machine contains different directories. One of them is `tmp`, that has also two subdirectories. 

There, you can find three types of files:
- `.cmd`: scripts generated by Autosubmit, applying the configuration to the templates. The placeholders are substituted. Those are the scripts submitted. Don't edit them, it won't work! They are re-generated each time that autosubmit runs.
- `.err`: standard error logs of each job.
- `.out`: standard output logs of each job.

In `ASLOGS` you can see the output and logs of each autosubmit command that was performed to an experiment.


My workflow failed! What can I do?
----------------------------------

It might happen that a job of the workflow fails. The first thing that you should check is the job's log. They will be located here: `$expid/tmp/LOG_$expid`. Every job has two log files: a `.err` and a `.out`. Check the both of them, and once you find and fix the error, perform `autosubmit create $expid` and `autosubmit run $expid` in order to re-run the **whole** workflow. 

If the job failed **but you don't want to rerun the whole workflow, just restart the last job that failed,** you can perform, for example:

`autosubmit setstatus <expid> -fs FAILED -t READY -s`

And then `autosubmit run <expid>`. You **don't** have to create again.
If you don't understand why your job failed, don't hesitate to contact us!

Your Workflow is slow? 
----------------------

try is it the debug queue and get rid of the long lumi queues!


1. [froura@climatedt-wf <expid>]$ vim conf/minimal.yml 
        
.. code-block:: yaml

     modify to:
                        CONFIG:
                         AUTOSUBMIT_VERSION: "4.0.89"
                         TOTALJOBS: 2 # <--
                         MAXWAITINGJOBS: 2 # <--

2. [froura@climatedt-wf <expid]$ vim proj/workflow/conf/platforms.yml 
.. code-block:: yaml

     modify line 98  to:     PARTITION: debug # <--

3. [froura@climatedt-wf <expid]$ autosubmit create expid
4. [froura@climatedt-wf <expid]$ autosubmit run expid


How can I update my application submodule?
------------------------------------------

Go inside your application's submodule, do `git fetch`, `git checkout $your-branch`. Check that it points to your lastest commit (`git log`) and once it is correct, go back to the workflow repository, `git add` the submodule, `git commit` and `git push`.