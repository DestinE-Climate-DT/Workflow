#! /bin/bash

set -e
# Utilities
PATH="${MODEL_DIR}":$PATH

SCRIPT_DIR=${thisdir:="${MODEL_DIR}"/run}

# Load traditional error handling
. $SCRIPT_DIR/add_run_routines
# Reset files and file names for check_error and check_final_status
final_status_file=${SCRIPT_DIR}/${job_name}.final_status
current_status_file=${SCRIPT_DIR}/${job_name}.status
rm -f ${final_status_file} ${current_status_file}

#=============================================================================
# MPI variables
# -------------

no_of_nodes=${SLURM_JOB_NUM_NODES:=270}
cpus_per_task=4
cpus_per_node=${SLURM_JOB_CPUS_PER_NODE%%\(*}
mpi_procs_pernode=$((cpus_per_node/cpus_per_task))
mpi_total_procs=$((no_of_nodes * mpi_procs_pernode))
ntasks=$mpi_total_procs

#
#=============================================================================

# load local setting, if existing
# -------------------------------
if [ -a ../setting ]
then
  echo "Load Setting"
  . ../setting
fi

# how to start the icon model
# ---------------------------

export START="srun -l --kill-on-bad-exit=1 --distribution=block:block --propagate=STACK,CORE --cpu-bind=verbose,core env OMP_NUM_THREADS=4 OMP_STACKSIZE=256M ICON_THREADS=4 --ntasks=$ntasks --cpus-per-task=$cpus_per_task"

# how to submit the next job
# --------------------------
job_name="${EXPNAME}"

# cdo for post-processing
# -----------------------
cdo="cdo"
cdo_diff="cdo diffn"

#=============================================================================

ulimit -s 4194304
ulimit -c 0

# ----------------------------------------------------------------------------
# ICON historical 1990 10 km setup for DestinE development
# ----------------------------------------------------------------------------

# (0) Basic model configuration
# -----------------------------

oce_per_node=8
atm_per_node=$((mpi_procs_pernode - oce_per_node))
oce_procs=$((no_of_nodes * oce_per_node))
mpi_oce_procs=$oce_procs
atm_procs=$((no_of_nodes * atm_per_node))
#
#--------------------------------------------------------------------------------------------------

# Mark current run as started in log
echo $(date -u +'%Y-%m-%dT%H:%M:%SZ') ${start_date%:*} ${end_date%:*} ${SLURM_JOBID} start

# Show current start date in job configuration
sh -c 'scontrol update JobId=$SLURM_JOB_ID Comment="$*"' scomment $start_date

#------------------------------------------------------------------------------

# (5) Define the model configuration
#-----------------------------------

# Write namelist files directly to working directory, create this if missing

EXPDIR="${experiments_dir}"/"${EXPNAME}"/run_${start_date}-${end_date}

if [[ -d $EXPDIR ]]
then
    echo "$(date +'%Y-%m-%dT%H:%M:%S'): removing run dir '$EXPDIR'"
    rm -fvr $EXPDIR
fi

mkdir -vp $EXPDIR
cd $EXPDIR

#------------------------------------------------------------------------------
# I. coupling section
#------------------------------------------------------------------------------

if [ $mpi_total_procs -lt 2 ] ; then
  check_error 0 "This setup requires at least 2 mpi processes. Exit"
fi

# I.1 Split the number of total procs and assign to each component
# ----------------------------------------------------------------

# Not sure what is best

# oce_min_rank=`expr ${mpi_total_procs} - ${mpi_oce_procs}`
# oce_max_rank=`expr ${oce_min_rank} + ${mpi_oce_procs} - 1`
# oce_group_size=1
# oce_inc_rank=1
# atm_min_rank=0
# atm_max_rank=`expr ${oce_min_rank} - 1`
# atm_group_size=1
# atm_inc_rank=1

 oce_min_rank=$atm_per_node
 oce_max_rank=$((mpi_total_procs - 1))
 oce_group_size=$oce_per_node
 oce_inc_rank=$((atm_per_node + 1))
 atm_min_rank=0
 atm_max_rank=$((mpi_total_procs - 1))
 atm_group_size=$atm_per_node
 atm_inc_rank=$((oce_per_node + 1))

#
# create ICON master, coupling and model namelists
# ------------------------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#

cat > icon_master.namelist << EOF
&master_nml
    lrestart = ${lrestart}
    read_restart_namelists = .false.
/
&master_time_control_nml
    calendar = 'proleptic gregorian'
    checkpointtimeintval = "${checkpoint_interval}"
    restarttimeintval = "${restart_interval}"
    experimentstartdate = "${start_date}"
    experimentstopdate = "${end_date}"
/
&master_model_nml ! 'atmo'
    model_name = 'atmo'
    model_namelist_filename = 'NAMELIST_atm'
    model_type = 1
    model_min_rank = $atm_min_rank
    model_max_rank = $atm_max_rank
    model_inc_rank = $atm_inc_rank
    model_rank_group_size = $atm_group_size
/
&master_model_nml ! 'ocean'
    model_name = 'ocean'
    model_namelist_filename = 'NAMELIST_oce'
    model_type = 2
    model_min_rank = $oce_min_rank
    model_max_rank = $oce_max_rank
    model_inc_rank = $oce_inc_rank
    model_rank_group_size = $oce_group_size
/
&jsb_control_nml
    is_standalone = .false.
    debug_level = 0
    restart_jsbach = .true.
    timer_level = 0
/
&jsb_model_nml
    model_id = 1
    model_name = 'JSBACH'
    model_shortname = 'jsb'
    model_description = 'JSBACH land surface model'
    model_namelist_filename = 'NAMELIST_lnd'
/
&time_nml
    is_relative_time = .true.
/

EOF

# I.3 YAC coupling library configuration
#-----------------------------------------------------------------------------
# component names in coupling.xml must (!) match with modelname_list[*]
cat > coupling.xml << EOF
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<coupling xmlns="http://www.w3schools.com"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.w3schools.com coupling.xsd">
   <redirect redirect_of_root="false" redirect_stdout="false"/>
   <components>
      <component id="1">
         <name>atmo</name>
         <model>ICON</model>
         <simulated>atmosphere</simulated>
         <transient_grid_refs>
            <transient_grid_ref collection_size="2" grid_ref="1" id="1" transient_ref="1"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="2" transient_ref="2"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="3" transient_ref="3"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="4" transient_ref="4"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="5" transient_ref="5"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="6" transient_ref="6"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="7" transient_ref="7"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="8" transient_ref="8"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="9" transient_ref="9"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="10" transient_ref="10"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="11" transient_ref="11"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="12" transient_ref="12"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="13" transient_ref="13"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="14" transient_ref="14"/>
         </transient_grid_refs>
      </component>
      <component id="2">
         <name>ocean</name>
         <model>ICON</model>
         <simulated>ocean</simulated>
         <transient_grid_refs>
            <transient_grid_ref collection_size="2" grid_ref="2" id="1" transient_ref="1"/>
            <transient_grid_ref collection_size="2" grid_ref="2" id="2" transient_ref="2"/>
            <transient_grid_ref collection_size="3" grid_ref="2" id="3" transient_ref="3"/>
            <transient_grid_ref collection_size="4" grid_ref="2" id="4" transient_ref="4"/>
            <transient_grid_ref collection_size="2" grid_ref="2" id="5" transient_ref="5"/>
            <transient_grid_ref collection_size="1" grid_ref="2" id="6" transient_ref="6"/>
            <transient_grid_ref collection_size="1" grid_ref="2" id="7" transient_ref="7"/>
            <transient_grid_ref collection_size="1" grid_ref="2" id="8" transient_ref="8"/>
            <transient_grid_ref collection_size="3" grid_ref="2" id="9" transient_ref="9"/>
            <transient_grid_ref collection_size="1" grid_ref="2" id="10" transient_ref="10"/>
            <transient_grid_ref collection_size="1" grid_ref="2" id="11" transient_ref="11"/>
            <transient_grid_ref collection_size="1" grid_ref="2" id="12" transient_ref="12"/>
            <transient_grid_ref collection_size="1" grid_ref="2" id="13" transient_ref="13"/>
            <transient_grid_ref collection_size="1" grid_ref="2" id="14" transient_ref="14"/>
         </transient_grid_refs>
      </component>
      <component id="3">
         <name>dummy</name>
         <model>ICON</model>
         <simulated>IO</simulated>
      </component>
   </components>
   <transients>
      <transient id="1" transient_standard_name="surface_downward_eastward_stress"/>
      <transient id="2" transient_standard_name="surface_downward_northward_stress"/>
      <transient id="3" transient_standard_name="surface_fresh_water_flux"/>
      <transient id="4" transient_standard_name="total_heat_flux"/>
      <transient id="5" transient_standard_name="atmosphere_sea_ice_bundle"/>
      <transient id="6" transient_standard_name="sea_surface_temperature"/>
      <transient id="7" transient_standard_name="eastward_sea_water_velocity"/>
      <transient id="8" transient_standard_name="northward_sea_water_velocity"/>
      <transient id="9" transient_standard_name="ocean_sea_ice_bundle"/>
      <transient id="10" transient_standard_name="10m_wind_speed"/>
      <transient id="11" transient_standard_name="river_runoff"/>
      <transient id="12" transient_standard_name="co2_mixing_ratio"/>
      <transient id="13" transient_standard_name="co2_flux"/>
      <transient id="14" transient_standard_name="sea_level_pressure"/>
   </transients>
   <grids>
      <grid alias_name="icon_atmos_grid" id="1"/>
      <grid alias_name="icon_ocean_grid" id="2"/>
   </grids>
   <dates>
      <start_date>${start_date}</start_date>
      <end_date>${next_date}</end_date>
      <calendar>proleptic-gregorian</calendar>
   </dates>
   <timestep_unit>ISO_format</timestep_unit>
   <couples>
      <couple>
         <component1 component_id="1"/>
         <component2 component_id="2"/>
         <transient_couple transient_id="1">
            <source component_ref="1" transient_grid_ref="1"/>
            <target transient_grid_ref="1"/>
            <timestep>
               <source>PT60S</source>
               <target>PT300S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="2">
            <source component_ref="1" transient_grid_ref="2"/>
            <target transient_grid_ref="2"/>
            <timestep>
               <source>PT60S</source>
               <target>PT300S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="3">
            <source component_ref="1" transient_grid_ref="3"/>
            <target transient_grid_ref="3"/>
            <timestep>
               <source>PT60S</source>
               <target>PT300S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="4">
            <source component_ref="1" transient_grid_ref="4"/>
            <target transient_grid_ref="4"/>
            <timestep>
               <source>PT60S</source>
               <target>PT300S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="5">
            <source component_ref="1" transient_grid_ref="5"/>
            <target transient_grid_ref="5"/>
            <timestep>
               <source>PT60S</source>
               <target>PT300S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="6">
            <source component_ref="2" transient_grid_ref="6"/>
            <target transient_grid_ref="6"/>
            <timestep>
               <source>PT300S</source>
               <target>PT60S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="7">
            <source component_ref="2" transient_grid_ref="7"/>
            <target transient_grid_ref="7"/>
            <timestep>
               <source>PT300S</source>
               <target>PT60S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="8">
            <source component_ref="2" transient_grid_ref="8"/>
            <target transient_grid_ref="8"/>
            <timestep>
               <source>PT300S</source>
               <target>PT60S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="9">
            <source component_ref="2" transient_grid_ref="9"/>
            <target transient_grid_ref="9"/>
            <timestep>
               <source>PT300S</source>
               <target>PT60S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="10">
            <source component_ref="1" transient_grid_ref="10"/>
            <target transient_grid_ref="10"/>
            <timestep>
               <source>PT60S</source>
               <target>PT300S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="11">
            <source component_ref="1" transient_grid_ref="11"/>
            <target transient_grid_ref="11"/>
            <timestep>
               <source>PT60S</source>
               <target>PT300S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="source_to_target_map" spread_distance="0.3" weighted="ARITHMETIC_AVERAGE"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="14">
            <source component_ref="1" transient_grid_ref="14"/>
            <target transient_grid_ref="14"/>
            <timestep>
               <source>PT60S</source>
               <target>PT300S</target>
               <coupling_period operation="average">PT15M</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements>
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
      </couple>
   </couples>
   <created date="26-02-2021 16:00" tool="YAC-CouplingGUI v.2.0.0"/>
</coupling>

EOF

#-----------------------------------------------------------------------------
# II. ATMOSPHERE and LAND
#-----------------------------------------------------------------------------
#
# atmosphere namelist
# -------------------

atm_output_interval="PT3H"

cat > NAMELIST_atm << EOF

&coupling_mode_nml
    coupled_mode = .true.
/
&parallel_nml
    nproma = 32
    num_io_procs = 10
    io_proc_chunk_size = 46
    io_process_stride = 8
    num_restart_procs = $((atm_procs/8))
/
&grid_nml
    dynamics_grid_filename = 'icon_grid_G.nc'
/
&run_nml
    num_lev = 90 ! number of full levels
    modeltimestep = 'PT60S'
    ltestcase = .false. ! run testcase
    ldynamics = .true. ! dynamics
    ltransport = .true. ! transport
    iforcing = 2 ! 0: none, 1: HS, 2: ECHAM, 3: NWP
    output = 'nml'
    msg_level = 10 ! level of details report during integration
    restart_filename = '${EXPNAME}_restart_atm_${end_date}.mfr'
    activate_sync_timers = .true.
    timers_level = 10
/
&extpar_nml
    itopo = 1 ! 1: read topography from the grid file
/
&initicon_nml
    init_mode = 2 ! 2: initialize from IFS analysis
    ifs2icon_filename = 'ifs2icon.nc'
/
&nonhydrostatic_nml
    damp_height = 40000. ! [m]
    rayleigh_coeff = 1.2 ! set to 0.1001 for rerun with little change
    vwind_offctr = 0.2
    divdamp_fac = 0.004
    divdamp_order = 24
    divdamp_trans_end = 17500
    divdamp_trans_start = 12500
    divdamp_type = 32
    exner_expol = 0.333
    hbot_qvsubstep = 16000.
    htop_moist_proc = 22500.
    iadv_rhotheta = 2
    igradp_method = 3
    itime_scheme = 4
    ivctype = 2
    l_open_ubc = .false.
    l_zdiffu_t = .true.
    lhdiff_rcf = .true.
    thhgtd_zdiffu = 125.
    thslp_zdiffu = 0.02
/
&interpol_nml
/
&sleve_nml
    min_lay_thckn = 25. ! [m]
    top_height = 75000. ! [m]
    stretch_fac = 0.9
    decay_scale_1 = 4000. ! [m]
    decay_scale_2 = 2500. ! [m]
    decay_exp = 1.2
    flat_height = 16000. ! [m]
    htop_thcknlimit = 14000.
    max_lay_thckn = 400.
/
&diffusion_nml
/
&transport_nml
    ihadv_tracer = 20, 20, 20, 20, 20, 20
    itype_hlimit = 3, 4, 4, 4, 4, 4
    ivadv_tracer = 3, 3, 3, 3, 3, 3
    tracer_names = 'hus', 'clw', 'cli', 'qr', 'qs', 'qg'
/
&aes_phy_nml
    ! domain 1
    ! atmospheric physics ("" = never)
    aes_phy_config(1)%dt_rad = 'PT30M'
    aes_phy_config(1)%dt_vdf = 'PT60S'
    ! surface (true or false)
    aes_phy_config(1)%ljsb = .true.
    aes_phy_config(1)%lamip = .false.
    aes_phy_config(1)%lice = .true.
    aes_phy_config(1)%lmlo = .false.
    aes_phy_config(1)%llake = .true.
    aes_phy_config(1)%dt_mig = 'PT60S'
    aes_phy_config(1)%iqneg_d2p = 2
    aes_phy_config(1)%iqneg_p2d = 2
/
&aes_rad_nml
    ! domain 1
    aes_rad_config(1)%isolrad = 6
    aes_rad_config(1)%irad_h2o = 1
    aes_rad_config(1)%irad_co2 = 3
    aes_rad_config(1)%irad_ch4 = 13
    aes_rad_config(1)%irad_n2o = 13
    aes_rad_config(1)%irad_o3 = 5 !
    aes_rad_config(1)%irad_o2 = 2
    aes_rad_config(1)%irad_cfc11 = 3
    aes_rad_config(1)%irad_cfc12 = 3
    aes_rad_config(1)%irad_aero = 13
/
&aes_gwd_nml
/
&aes_sso_nml
/
&aes_vdf_nml
    aes_vdf_config(1)%pr0 = 0.7
    aes_vdf_config(1)%turb = 2
/
&aes_cnv_nml
/
&aes_cld_nml
/
&aes_cov_nml
    aes_cov_config(1)%cqx = 1.e-6
    aes_cov_config(1)%icov = 3
/
&ccycle_nml
/
! Parameters for all output files
! -------------------------------
&io_nml
    output_nml_dict = 'dict.txt'
    netcdf_dict = 'dict.txt'
    itype_pres_msl = 4
    restart_file_type = 5
    ! restart_write_mode = 'joint procs multifile' ! not useful in r2b4 setup
    ! lnetcdf_flt64_output = .true. ! 64 bit output in all files
    ! lkeep_in_sync = .true. ! sync after each timestep
    write_initial_state = .false.
    restart_write_mode = 'joint procs multifile'
    write_last_restart = .true.
/
! Standard AMIP output...
&output_nml ! 'atm_2d'
    output_filename = 'atm_2d'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    operation = 'mean'
    ml_varlist = 'ps', 'psl', 'rsdt', 'rsut', 'rsutcs', 'rlut', 'rlutcs',
                 'rsds', 'rsdscs', 'rlds', 'rldscs', 'rsus', 'rsuscs', 'rlus',
                 'ts', 'sic', 'sit', 'clt', 'prlr', 'prls', 'pr', 'prw',
                 'cllvi', 'clivi', 'qgvi', 'qrvi', 'qsvi', 'cptgzvi', 'hfls',
                 'hfss', 'evspsbl', 'tauu', 'tauv', 'sfcwind', 'uas', 'vas',
                 'tas'
/
&sea_ice_nml
    albedow_sim = 0.10
    albi = 0.70
    albim = 0.65
    albs = 0.80
    albsm = 0.65
    i_ice_dyn = 1
    i_ice_therm = 1
    leadclose_1 = 0.25
    leadclose_2n = 0.666
/
&aes_cop_nml
    aes_cop_config(1)%cinhomi = 1.0
    aes_cop_config(1)%cinhoml1 = 0.4
    aes_cop_config(1)%cinhoml2 = 0.4
    aes_cop_config(1)%cinhoml3 = 0.4
    aes_cop_config(1)%cn1lnd = 50.0
    aes_cop_config(1)%cn1sea = 50.0
    aes_cop_config(1)%cn2lnd = 220.0
    aes_cop_config(1)%cn2sea = 100.0
/
&aes_mig_nml
    aes_mig_config(1)%mu_rain = 0.5
    aes_mig_config(1)%rain_n0_factor = 0.1
    aes_mig_config(1)%v0snow = 25.
/
&output_nml ! 'atm_2d_500'
    output_filename = "${EXPNAME}_atm_2d_500"
    filename_format = '<output_filename>_<levtype_l>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    p_levels = 50000
    pl_varlist = 'omega', 'zg'
/
&output_nml ! 'atm_2d_850'
    output_filename = "${EXPNAME}_atm_2d_850"
    filename_format = '<output_filename>_<levtype_l>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    p_levels = 85000
    pl_varlist = 'ua', 'va', 'vor', 'gpsm'
/
&output_nml ! 'atm_3d_1'
    output_filename = "${EXPNAME}_atm_3d_1"
    filename_format = '<output_filename>_<levtype_l>_<datetime2>'    
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    ml_varlist = 'pfull', 'ta'
    operation = 'mean'
/
&output_nml ! 'atm_3d_2'
    output_filename = "${EXPNAME}_atm_3d_2"
    filename_format = '<output_filename>_<levtype_l>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    ml_varlist = 'ua', 'va'
    operation = 'mean'
/
&output_nml ! 'atm_3d_3'
    output_filename = 'atm_3d_3'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    ml_varlist = 'wa', 'cl'
    operation = 'mean'
/
&output_nml ! 'atm_3d_4'
    output_filename = 'atm_3d_4'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    ml_varlist = 'hus', 'clw'
    operation = 'mean'
/
&output_nml ! 'atm_3d_5'
    output_filename = 'atm_3d_5'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    ml_varlist = 'cli', 'cptgz'
    operation = 'mean'
/
&output_nml ! 'atm_3d_6'
    output_filename = 'atm_3d_6'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    ml_varlist = 'rsd', 'rsu'
    operation = 'mean'
/
&output_nml ! 'atm_3d_7'
    output_filename = 'atm_3d_7'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${atm_output_interval}"
    file_interval = "${atm_output_interval}"
    include_last = .false.
    ml_varlist = 'rld', 'rlu'
    operation = 'mean'
/

EOF

# jsbach namelist
# ---------------

cat > NAMELIST_lnd << EOF

&jsb_model_nml
    usecase = 'jsbach_lite'
    use_lakes = .true.
    fract_filename = 'bc_land_frac.nc'
    init_from_ifs = .true.
/
&jsb_seb_nml
    bc_filename = 'bc_land_phys.nc'
    ic_filename = 'ic_land_soil.nc'
/
&jsb_rad_nml
    use_alb_veg_simple = .true. ! if jsbach_lite
    bc_filename = 'bc_land_phys.nc'
    ic_filename = 'ic_land_soil.nc'
/
&jsb_turb_nml
    bc_filename = 'bc_land_phys.nc'
    ic_filename = 'ic_land_soil.nc'
/
&jsb_sse_nml
    l_heat_cap_map = .false.
    l_heat_cond_map = .false.
    l_heat_cap_dyn = .false.
    l_heat_cond_dyn = .false.
    l_snow = .true.
    l_dynsnow = .true.
    l_freeze = .true.
    l_supercool = .false.
    bc_filename = 'bc_land_soil.nc'
    ic_filename = 'ic_land_soil.nc'
/
&jsb_hydro_nml
    bc_filename = 'bc_land_soil.nc'
    ic_filename = 'ic_land_soil.nc'
    bc_sso_filename = 'bc_land_sso.nc'
/
&jsb_assimi_nml
    active = .false. ! if jsbach_pfts
/
&jsb_pheno_nml
    scheme = 'climatology' ! 'climatology' if jsbach_lite
    bc_filename = 'bc_land_phys.nc'
    ic_filename = 'ic_land_soil.nc'
/
&jsb_carbon_nml
    active = .false.
    bc_filename = 'bc_land_carbon.nc'
    ic_filename = 'ic_land_carbon.nc'
    read_cpools = .false.
/
&jsb_fuel_nml
    active = .false.
    fuel_algorithm = 1
/
&jsb_disturb_nml
    active = .false.
    ic_filename = 'ic_land_soil.nc'
    bc_filename = 'bc_land_phys.nc'
    fire_algorithm = 1
    windbreak_algorithm = 1
    lburn_pasture = .false.
/
&jsb_hd_nml
    active = .true.
    routing_scheme = 'full' ! 'zero': simple scheme with zero runoff everywhere
    diag_water_budget = .true.
    debug_hd = .false.
    enforce_water_budget = .false. ! stop in case of water conservation problem
    bc_filename = 'bc_land_hd.nc'
    ic_filename = 'ic_land_hd.nc'
    use_bifurcated_rivers = .true.
    read_initial_reservoirs = ${read_initial_reservoirs}
/

EOF

#-----------------------------------------------------------------------------
# III. OCEAN and SEA-ICE (and HAMOCC) 
#-----------------------------------------------------------------------------
#
# ocean namelist
# --------------

oce_file_interval="P1D"

cat > NAMELIST_oce << EOF

&coupling_mode_nml
    coupled_mode = .true.
/
&parallel_nml
    nproma = 8
    num_io_procs = 3
    num_prefetch_proc = 0
    l_fast_sum = .false.
    io_proc_chunk_size = 37
    num_restart_procs = $((oce_procs/8))
    p_test_run = .false.
/
&grid_nml
    dynamics_grid_filename = 'icon_grid_O.nc'
    use_dummy_cell_closure = .true.
    use_duplicated_connectivity = .false.
/
&dynamics_nml
    iequations = -1 ! -1: hydrost. ocean model
/
&run_nml
    modeltimestep = 'PT300S'
    output = 'nml' ! namelist controlled output scheme
    activate_sync_timers = .true.
    profiling_output = 1 ! aggregated: 1; detailed: 2; in files: 3
    msg_timestamp = .false.
    timers_level = 10
    debug_check_level = 1
    restart_filename = '${EXPNAME}_restart_oce_${end_date}.mfr'
/
&dbg_index_nml
    dbg_lat_in = 30.0
    dbg_lon_in = -30.0
    idbg_elev = 5
    idbg_mxmn = 0
    idbg_slev = 1
    idbg_val = 0
    str_mod_tst = 'all'
/
&ocean_dynamics_nml
    n_zlev = 72
    dzlev_m = 2.0, 2.2, 2.5, 2.8, 3.1, 3.5, 3.9, 4.4, 4.9, 5.4, 5.9, 6.4, 7.1,
              7.7, 8.4, 9.2, 10.1, 11.0, 12.0, 13.2, 14.4, 15.7, 17.1, 18.7,
              20.4, 22.3, 24.3, 26.5, 28.9, 31.5, 34.3, 37.3, 40.6, 43.1, 45.3,
              46.8, 48.4, 50.0, 51.7, 53.4, 55.2, 57.0, 58.9, 60.8, 62.9, 66.6,
              72.6, 80.6, 90.6, 100.2, 110.0, 120.3, 128.7, 137.4, 146.4, 155.7,
              165.2, 174.8, 184.4, 194.1, 203.6, 212.9, 221.9, 230.5, 238.5,
              245.9, 252.4, 258.1, 262.8, 266.4, 268.9, 270.1
    l_edge_based = .false. ! edge- or cell-based mimetic discretization
    select_solver = 4 ! 1=gmres_oce_old; 2=ocean_restart_gmres, 3=mixed precisison restart, 4=CG (default) 5=CGJ 6=BiCG 7=GMRES restart (legacy) 8=MINRES
    use_absolute_solver_tolerance = .true.
    fast_performance_level = 200 ! performance level 12: for cell-based; 5: default
    use_continuity_correction = .true. ! height adjustment according to vertical velocity in dynamics
    cfl_check = .false.
    cfl_write = .false.
    i_bc_veloc_top = 1
    i_bc_veloc_bot = 1 ! 0: (def) bottom friction off, 1: on
    l_lhs_direct = .false.
    l_partial_cells = .false.
    select_lhs = 1
    solver_max_restart_iterations = 100
    solver_tolerance = 1.0E-10
    minverticallevels = 10
    solver_max_iter_per_restart = 14
    vert_cor_type = 1
/
&ocean_tracer_transport_nml
    flux_calculation_horz = 5 ! 1=upwind, 2=central, 3=Lax-Friedrichs, 4=Miura, 5=FCT with Zalesak limiter (default)
    flux_calculation_vert = 7 ! 6=adpo; 7=upwind biased ppm (default); 8=FCT with Zalesak limiter
    ! define low and high order methods to be used in
    ! horizontal flux corrected transport methods
    ! (flux_calculation_horz=4,5)
    fct_low_order_flux = 1 ! horizontal low  order method: 1=upwind (def), no other implemented
    fct_high_order_flux = 5 ! horizontal high order method: 1=upwind, 2=central, 3=lax_friedrichs, 4=miura_order1
    fct_limiter_horz = 100 ! Zalesak
    threshold_min_t = -2.0
/
&ocean_horizontal_diffusion_nml
    laplacian_form = 1 ! 1=curlcurl-graddiv
    velocitydiffusion_order = 2 ! 1=laplacian (def); 2=biharmonic; 21=biharmonic+laplacian (for the laplacian leith)
    harmonicviscosity_scaling = 1
    harmonicviscosity_reference = 0.0 ! [m2/s] constant horizontal viscosity coefficient for velocity
    tracerhorizontaldiffusion_scaling = 1
    temperature_horizontaldiffusion_background = 0.0
    temperature_horizontaldiffusion_reference = 0
    salinity_horizontaldiffusion_background = 0.0
    salinity_horizontaldiffusion_reference = 0
    biharmonicviscosity_background = 0.0
    biharmonicviscosity_reference = 2.0E10
    biharmonicviscosity_scaling = 1
/
&ocean_vertical_diffusion_nml
    alpha_tke = 30.0
    c_eps = 0.7
    cd = 3.75
    kappam_max = 100.0
    kappam_min = 0.0
    mxl_min = 1.d-8
    only_tke = .true.
    ppscheme_type = 0
    tke_min = 1.d-6
    tke_mxl_choice = 2
    tke_surf_min = 1.d-4
    use_lbound_dirichlet = .false.
    use_ubound_dirichlet = .false.
    vert_mix_type = 2
    clc = 0.15 ! Factor in vertical Langmuir circulation (Axell, 2002: clc=0.1)
    l_lc = .true. ! Use Langmuir parameterisation (Axell, 2002)
/
&ocean_gentmcwilliamsredi_nml
    gmredi_configuration = 0 ! 0=cartesian diffusion; 1=GM-Redi: bolus advection + isopycnal diffusion
    tapering_scheme = 1
    gmredi_usesrelativemaxslopes = .false.
    s_max = 1.0e-3 ! 1.0
    s_d = 1.0e-4 ! 5e-3 to 5e-4
    k_tracer_gm_kappa_parameter = 0.0
    k_tracer_isoneutral_parameter = 0.0 ! value for cell-based cartesian diffusion - mpiom: 1000/400km = 400/160km
    k_tracer_dianeutral_parameter = 0.0 ! 1.0E-5
    switch_off_diagonal_vert_expl = .true.
    gmredi_combined_diagnostic = .false.
    revert_vertical_recon_and_transposed = .true.
    slope_calc_via_temperture_salinity = .true.
    include_slope_squared_implicit = .true. ! think of l_with_vert_tracer_diffusion
    switch_on_tapering_horizontal_diffusion = .true.
/
&ocean_physics_nml
    i_sea_ice = 1 ! 0 = no sea ice; 1 = sea ice model on; default=1
/
&ocean_forcing_nml
    iforc_oce = 14 ! ocean forcing: 14 from coupling via YAC
    forcing_windstress_u_type = 2 ! 0: zero wind stress, 1: read from file, 2: none
    forcing_windstress_v_type = 2 ! 0: zero wind stress, 1: read from file, 2: none
    limit_seaice = .true. ! default: TRUE
    seaice_limit = 6.0 ! hard limit set to 80% of upper layer for sea ice
    lfix_salt_content = .true. ! fix global ocean+ice salt content to constant (false)
    jerlov_atten = 0.08
    jerlov_bluefrac = 0.36
    lcheck_salt_content = .false.
    limit_elevation = .false.
    limit_seaice_type = 1
    lswr_jerlov = .true.
    tides_mod = 1
    use_tides = .false.
    atm_pressure_included_in_icedyn = .true.
    atm_pressure_included_in_ocedyn = .true.
/
&ocean_diagnostics_nml
    diagnose_for_heat_content = .true.
    diagnose_for_horizontalvelocity = .false.
    diagnose_for_tendencies = .false.
    diagnostics_level = 1
/
&io_nml
    restart_file_type = 5
    write_last_restart = .true.
    ! restart_write_mode = 'joint procs multifile' ! not yet available in ocean model
    ! lnetcdf_flt64_output = .true. ! 64 bit output in all files
    ! lkeep_in_sync = .true. ! sync after each timestep
    write_initial_state = .false.
    restart_write_mode = 'joint procs multifile'
/
&sea_ice_nml
    albedow_sim = 0.10
    albi = 0.70
    albim = 0.65
    albs = 0.80
    albsm = 0.65
    i_ice_dyn = 1
    i_ice_therm = 1
    leadclose_1 = 0.25
    leadclose_2n = 0.666
/
&output_nml ! 'oce_2d'
    output_filename = 'oce_2d'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${oce_file_interval}"
    file_interval = "${oce_file_interval}"
    include_last = .false.
    ml_varlist = 'hi', 'hs', 'conc', 'Qtop', 'Qbot', 'atmos_fluxes_stress_x',
                 'atmos_fluxes_stress_y', 'atmos_fluxes_stress_xw',
                 'atmos_fluxes_stress_yw', 'atmos_fluxes_HeatFlux_ShortWave',
                 'atmos_fluxes_HeatFlux_LongWave',
                 'atmos_fluxes_HeatFlux_Sensible',
                 'atmos_fluxes_HeatFlux_Latent', 'atmos_fluxes_HeatFlux_Total',
                 'atmos_fluxes_FrshFlux_Precipitation',
                 'atmos_fluxes_FrshFlux_SnowFall',
                 'atmos_fluxes_FrshFlux_Evaporation',
                 'atmos_fluxes_FrshFlux_Runoff', 'Wind_Speed_10m'
    operation = 'mean'
/
&output_nml ! 'oce_3d'
    output_filename = 'oce_3d'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${oce_file_interval}"
    file_interval = "${oce_file_interval}"
    include_last = .false.
    ml_varlist = 'to', 'so'
    operation = 'mean'
/
&output_nml ! 'oce_surf'
    output_filename = 'oce_surf'
    filename_format = '${EXPNAME}_<output_filename>_<datetime2>'
    filetype = 5
    mode = 1
    output_start = "${start_date}"
    output_end = "${next_date}"
    output_interval = "${oce_file_interval}"
    file_interval = "${oce_file_interval}"
    include_last = .false.
    ml_varlist = 'zos', 'sea_level_pressure'
    operation = 'mean'
/
&ocean_initialConditions_nml
    initial_salinity_type                      = 0                ! 0: none, 1: read S from initial_state.nc
    initial_temperature_type                   = 0                ! 0: none, 1: read T from initial_state.nc
    initialize_fromRestart                     = ${initialize_fromrestart}
/
EOF

# Selectively add disturbance to overcome model failure
# ------------------------------------------------

if [[ "$disturbance_command" ]]
then   
    echo "disturbing model for start date ${start_date}, using '$disturbance_command'"
    eval "$disturbance_command"
fi

#-----------------------------------------------------------------------------

if [ $mpi_total_procs -lt `expr $mpi_oce_procs + 1` ] ; then
   echo "Too few mpi_total_procs for requested mpi_oce_procs."
   echo "-> check mpi_total_procs and mpi_oce_procs. Exiting."
   check_error 0
   exit
fi

#=============================================================================
#
# This section of the run script prepares and starts the model integration. 
#
#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# Provide input files
# $Id: format.tmpl 9264 2021-06-21 21:24:57Z m221078 $
#
# [files]

# [files.atmosphere]
atmosphere_dir="${icon_data_rootFolder}"/grids/public/mpim

# [files.atmosphere.mapped]
mapped_dir=$atmosphere_dir/0033
ln -snvf $mapped_dir/icon_grid_0033_R02B08_G.nc icon_grid_G.nc

# [files.atmosphere.mapped.initial]
initial_dir=$mapped_dir/initial_condition
ln -snvf $initial_dir/ifs2icon_1990010100_R02B08_G.nc ifs2icon.nc


# Set initial and final years for ozone &
# aerosol inputs

y0=${start_date::4}
yN=${end_date::4}

# [files.atmosphere.mapped.ozone]
for((yr = $y0 + -1; yr <= $yN + 1; ++yr)) 
do
    label=1989
        ((yr >= 1989)) && label=${yr}
        ((yr >= 2015)) && label=2014
    ozone_dir=$mapped_dir/ozone
    ln -snvf $ozone_dir/bc_ozone_historical_$((label - 1)).nc .
    ln -snvf $ozone_dir/bc_ozone_historical_${label}.nc .
    ln -snvf $ozone_dir/bc_ozone_historical_$((label + 1)).nc .
done # offsets

# [files.atmosphere.mapped.ocean_surface]
ocean_surface_dir=$mapped_dir/sst_and_seaice
ln -snvf $ocean_surface_dir/bc_sic_1988-1992.nc bc_sic.nc
ln -snvf $ocean_surface_dir/bc_sst_1988-1992.nc bc_sst.nc

# [files.atmosphere.mapped.aerosols]

ln -snvf $aerosols_dir/bc_aeropt_kinne_lw_b16_coa.nc .
ln -snvf $aerosols_dir/bc_aeropt_kinne_sw_b14_coa.nc .

for((yr = $y0 + -1; yr <= $yN + 1; ++yr))
do
    label=1989
        ((yr >= 1989)) && label=${yr}
        ((yr >= 2023)) && label=2022
    aerosols_dir=$mapped_dir/aerosol_kinne

   ln -snvf $aerosols_dir/bc_aeropt_kinne_sw_b14_fin_$((label - 1)).nc  .
   ln -snvf $aerosols_dir/bc_aeropt_kinne_sw_b14_fin_${label}.nc  .
   ln -snvf $aerosols_dir/bc_aeropt_kinne_sw_b14_fin_$((label + 1)).nc  .

done # offsets

# [files.atmosphere.restart]
restart_dir="${experiments_dir}"/"${EXPNAME}"/restarts 

if [ ! -d "${restart_dir}" ]; then
   mkdir ${restart_dir}
fi

# If second chunk read/write from mfr (multirestartfile)
if [ "${lrestart}" == ".true." ]; then
      ln -snvf $restart_dir/"${EXPNAME}"_restart_atm_${end_date}.mfr \
      multifile_restart_atm.mfr
fi
# [files.atmosphere.model]
model_dir="${MODEL_DIR}"

# [files.atmosphere.model.data]
data_dir=$model_dir/data
ln -snvf $data_dir/ECHAM6_CldOptProps_rrtmgp_lw.nc \
    rrtmgp-cloud-optics-coeffs-lw.nc
ln -snvf $data_dir/ECHAM6_CldOptProps_rrtmgp_sw.nc \
    rrtmgp-cloud-optics-coeffs-sw.nc

# [files.atmosphere.model.rrtmgp]
rrtmgp_dir=$model_dir/externals/rte-rrtmgp/rrtmgp/data
ln -snvf $rrtmgp_dir/rrtmgp-data-lw-g256-2018-12-04.nc coefficients_lw.nc
ln -snvf $rrtmgp_dir/rrtmgp-data-sw-g224-2018-12-04.nc coefficients_sw.nc

# [files.atmosphere.model.run]
run_dir=$model_dir/run
cp -fv $run_dir/dict.iconam.mpim dict.txt

# [files.land]
land_dir="${icon_data_rootFolder}"/grids/public/mpim

# [files.land.mapped]
mapped_dir=$land_dir/0033-0034/land
ln -snvf $mapped_dir/ic_land_soil_1950.nc ic_land_soil.nc
ln -snvf $mapped_dir/bc_land_frac_1950.nc bc_land_frac.nc
ln -snvf $mapped_dir/bc_land_phys_1950.nc bc_land_phys.nc
ln -snvf $mapped_dir/bc_land_soil_1950.nc bc_land_soil.nc
ln -snvf $mapped_dir/bc_land_sso_1950.nc bc_land_sso.nc
ln -snvf $mapped_dir/icon_hdpara_r2b8_0033_0034_ns_maxlnd_v1.nc bc_land_hd.nc
ln -snvf $mapped_dir/hdstart_r2b8_0033_0034_v1.nc ic_land_hd.nc


# [files.land.model]
model_dir="${MODEL_DIR}"/externals/jsbach/data
ln -snvf $model_dir/lctlib_nlct21.def .

# [files.ocean]
ocean_dir="${icon_data_rootFolder}"/grids/public/mpim

# [files.ocean.grids]
grids_dir=$ocean_dir/0034
ln -snvf $grids_dir/icon_grid_0034_R02B08_O.nc icon_grid_O.nc

# [files.ocean.restart]
restart_dir="${experiments_dir}"/"${EXPNAME}"/restarts

# If second chunk read/write from mfr (multirestartfile)
# If running first chunk then itialize ocean from excisting restart data

if [ "${initialize_fromrestart}" == ".false." ]; then
   ln -snvf $restart_dir/"${EXPNAME}"_restart_oce_${end_date}.mfr \
      multifile_restart_ocean.mfr
else
   restart_dir=$grids_dir"/ocean/restart"
   ln -snvf $restart_dir/exp.ocean_era51h_zstar_r2b8_23097-ERA_restart_oce_19890101T000000Z.nc \
      multifile_restart_ocean.mfr
fi

# [files.coupler]
coupler_dir="${MODEL_DIR}"/externals/yac/input
cp -fv $coupler_dir/coupling.xsd .


#-----------------------------------------------------------------------------
#  get model
#
ls -l ${MODEL}
check_error $? "${MODEL} does not exist?"
#
ldd ${MODEL}
#
#-----------------------------------------------------------------------------
#
# start experiment
#
cp -p ${MODEL} ./icon
export MODEL=./icon

rm -f finish.status

date
${START} ${MODEL}
date

if [ -r finish.status ] ; then
  check_final_status 0 "${START} ${MODEL}"
else
  check_final_status -1 "${START} ${MODEL}"
fi

# Handle restart hand-over

cp -lrfv ${EXPNAME}_restart_atm_${end_date}.mfr "${experiments_dir}"/"${EXPNAME}"/restarts
cp -lrfv ${EXPNAME}_restart_oce_${end_date}.mfr "${experiments_dir}"/"${EXPNAME}"/restarts

# Clean up our restart

rm -rfv ${EXPNAME}_restart_atm_${end_date}.mfr
rm -rfv ${EXPNAME}_restart_oce_${end_date}.mfr
#
#-----------------------------------------------------------------------------
#
finish_status=`cat finish.status`
echo $finish_status
echo "============================"
echo "Script run successfully: $finish_status"
echo "============================"

#-----------------------------------------------------------------------------

# Mark current run as successful in log
echo $(date -u +'%Y-%m-%dT%H:%M:%SZ') ${start_date%:*} ${end_date%:*} ${SLURM_JOBID} end

cp finish.status ${run_dir}

status=0
exit $status

#-----------------------------------------------------------------------------
# vim:ft=sh
#-----------------------------------------------------------------------------
